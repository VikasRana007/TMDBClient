plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.learning.tmdbclient"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "API_KEY", "\"bb37c2b9c9b80aed2ce0be97ce366ad2\""
        buildConfigField "String", "BASE_URL", "\"https://api.themoviedb.org/3/\""
    }

//    kapt {
//        generateStubs = true
//    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
    }
}

dependencies {
    def lifecycle_version = "2.4.1"
    def room_version = "2.4.2"
    def coroutine_version = "1.6.1"
    def dagger_version = "2.42"
    def retrofit_version = "2.9.0"
    def interceptor_version = "4.5.0"
    def okhttp_version = "4.9.3"
    def glider_version = "4.13.2"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Annotation processor if using java 8
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // room dependencies
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    //Kotlin ext and Coroutine support for room
    implementation "androidx.room:room-ktx:$room_version"

    //coroutine core dependencies
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    // coroutine android dependency
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    // dagger dependencies
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    // retrofit & GSON convertor
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    // OK HTTP and Logging Interceptor
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$interceptor_version"
    //Glide
    implementation "com.github.bumptech.glide:glide:$glider_version"
    kapt "com.github.bumptech.glide:compiler:$glider_version"

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'com.google.truth:truth:1.1'
    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.2.1'
    testImplementation 'org.robolectric:robolectric:4.8'                           // this provides the simulated android environment fot androidx testing

    // Testing dependency
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'com.google.truth:truth:1.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.2.1'

}